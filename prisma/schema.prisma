generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  email       String     @unique
  password    String
  name        String?
  role        UserRole   @default(USER)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  lastLoginAt DateTime?
  analyses    Analysis[]
  mainData    MainData[]
  reports     Report[]
}

model Company {
  id           String     @id @default(cuid())
  name         String     @unique
  nameKr       String?
  description  String?
  systemPrompt String?
  order        Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  analyses     Analysis[]
  mainData     MainData[]
  reports      Report[]
}

model MainData {
  id              String   @id @default(cuid())
  companyId       String
  sequenceNumber  Int
  item            String
  itemEn          String?
  question        String
  questionEn      String?
  scale           Int
  generalRule     String
  generalRuleEn   String?
  modifiedScale   Int
  cumulativeScore Int
  weight          Float
  index           Float
  source          String?
  sourceEn        String?
  category        String
  categoryEn      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          String?
  company         Company  @relation(fields: [companyId], references: [id])
  user            User?    @relation(fields: [userId], references: [id])

  @@index([companyId])
  @@index([category])
  @@index([sequenceNumber])
}

model Analysis {
  id              String   @id @default(cuid())
  companyId       String
  date            DateTime
  sequenceNumber  Int
  item            String
  scale           Int
  modifiedScale   Int
  cumulativeScore Int
  weight          Float
  index           Float
  category        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          String?
  company         Company  @relation(fields: [companyId], references: [id])
  user            User?    @relation(fields: [userId], references: [id])

  @@index([companyId])
  @@index([date])
  @@index([category])
}

model Report {
  id        String     @id @default(cuid())
  companyId String
  date      DateTime
  type      ReportType
  content   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String?
  contentEn String?
  company   Company    @relation(fields: [companyId], references: [id])
  user      User?      @relation(fields: [userId], references: [id])

  @@unique([companyId, date, type])
  @@index([companyId])
  @@index([date])
}

model SystemSetting {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum ReportType {
  NOW
  INSIGHT
}
